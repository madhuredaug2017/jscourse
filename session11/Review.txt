1)function test() {
   console.log(a); //undefined
   console.log(foo());//2
   //variables and function declarations are hoisted 
   var a = 1;
   function foo() {
      return 2;
   }
}

test();

2) var me = 1; //global variable 
function findme () {
    var me = 10;//added this line //local variable to the function
    if (me) {
        //until es6  there is only functional scope 
        //there is no block scope 
        me = 100;
        console.log(me);//100
    }
    console.log(me); //100 
}
console.log(me); //1
findme();
console.log(me) //1



3)function foo(){
    //hoisited to the top of line of function 
    function bar() {
        return 3;
    }
    return bar();

    function bar() {
        return 8;
    }

}
console.log(foo());


4)function foo(){
    //var bar;
    console.log(bar);
    var bar = function() {
        return 3;
    };
    return bar(); //3
    var bar = function() {
        return 8;
    };
}
console.log(foo()); //3

5)function foo(){
    //var bar; //undefined 
    return bar(); //throw error undefined is not a function 
    var bar = function() {
        return 3;
    };
    var bar = function() {
        return 8;
    };
}

... ... 
6)function foo(){
    //var bar; --//return 3

    function bar() {
        return 8;
    };

    var bar = function() {
        return 3;
    };
   return bar();
}

console.log(foo());
